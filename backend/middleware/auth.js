// backend/middleware/auth.js
const jwt = require('jsonwebtoken');
const asyncHandler = require('express-async-handler');
const User = require('../models/User');

/**
 * ูุณูุท ูุญูุงูุฉ ุงููุณุงุฑุงุช ุงูุชู ุชุชุทูุจ ุชุณุฌูู ุงูุฏุฎูู
 * ูุชุญูู ูู ูุฌูุฏ ุชููู ุตุงูุญ ููุถูู ูุนูููุงุช ุงููุณุชุฎุฏู ุฅูู ุงูุทูุจ
 */
const protect = asyncHandler(async (req, res, next) => {
  let token;

  // ูุญุต ูุฌูุฏ ุงูุชููู ูู ุฑุคูุณ ุงูุทูุจ
  if (req.headers.authorization && req.headers.authorization.startsWith('Bearer')) {
    try {
      // ุงุณุชุฎุฑุงุฌ ุงูุชููู
      token = req.headers.authorization.split(' ')[1];

      // ุณุฌู ููุชุดุฎูุต
      console.log(`๐ ุงูุชุญูู ูู ุงูุชููู: ${token.substring(0, 10)}...`);

      // ุงูุชุญูู ูู ุตุญุฉ ุงูุชููู
      const decoded = jwt.verify(token, process.env.JWT_SECRET);
      
      console.log(`โ ุชู ุงูุชุญูู ูู ุงูุชููู ุจูุฌุงุญ. ูุนุฑู ุงููุณุชุฎุฏู: ${decoded.id}`);

      // ุฌูุจ ุจูุงูุงุช ุงููุณุชุฎุฏู ุจุฏูู ูููุฉ ุงููุฑูุฑ
      req.user = await User.findById(decoded.id).select('-password');

      // ุฅุฐุง ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุณุชุฎุฏู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
      if (!req.user) {
        console.log(`โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุณุชุฎุฏู ุจุงููุนุฑู: ${decoded.id}`);
        res.status(401);
        throw new Error('ุบูุฑ ูุตุฑุญ ุจูุ ุงููุณุชุฎุฏู ุบูุฑ ููุฌูุฏ');
      }

      // ุงูุชุญูู ูู ุญุงูุฉ ุงููุณุชุฎุฏู
      if (req.user.isActive === false) {
        console.log(`๐ซ ุงููุณุชุฎุฏู ${req.user._id} (${req.user.email}) ุบูุฑ ูุดุท`);
        res.status(403);
        throw new Error('ุชู ุชุนุทูู ุญุณุงุจู. ูุฑุฌู ุงูุชูุงุตู ูุน ุงูุฅุฏุงุฑุฉ ูููุณุงุนุฏุฉ.');
      }

      // ุชุญุฏูุซ ุขุฎุฑ ูุดุงุท ูููุณุชุฎุฏู (ุงุฎุชูุงุฑูุ ูููู ุชุนูููู ุฅุฐุง ูู ููู ูุทููุจูุง)
      /*
      req.user.lastActive = Date.now();
      await req.user.save({ validateBeforeSave: false });
      */

      console.log(`๐ค ุชู ุงูุชุนุฑู ุนูู ุงููุณุชุฎุฏู: ${req.user.username} (${req.user.role})`);
      next();
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุงููุตุงุฏูุฉ:', error.message);
      
      // ุฑุณุงุฆู ุฎุทุฃ ุฃูุซุฑ ุชูุตููุงู ุจูุงุกู ุนูู ููุน ุงูุฎุทุฃ
      if (error.name === 'JsonWebTokenError') {
        res.status(401);
        throw new Error('ุบูุฑ ูุตุฑุญ ุจูุ ุงูุชููู ุบูุฑ ุตุงูุญ');
      } else if (error.name === 'TokenExpiredError') {
        res.status(401);
        throw new Error('ุงูุชูุช ุตูุงุญูุฉ ุงูุฌูุณุฉุ ูุฑุฌู ุชุณุฌูู ุงูุฏุฎูู ูุฑุฉ ุฃุฎุฑู');
      } else {
        res.status(401);
        throw new Error('ูุดู ุงููุตุงุฏูุฉุ ูุฑุฌู ุชุณุฌูู ุงูุฏุฎูู ูุฑุฉ ุฃุฎุฑู');
      }
    }
  } else {
    // ูุง ููุฌุฏ ุชููู ูู ุฑุคูุณ ุงูุทูุจ
    const requestPath = req.originalUrl || req.url;
    console.log(`๐ ุทูุจ ุจุฏูู ุชููู ูุตุงุฏูุฉ: ${requestPath}`);
    res.status(401);
    throw new Error('ุบูุฑ ูุตุฑุญ ุจูุ ูุง ููุฌุฏ ุชููู');
  }
});

/**
 * ูุณูุท ูุญูุงูุฉ ุงููุณุงุฑุงุช ุงูุชู ุชุชุทูุจ ุตูุงุญูุงุช ุงููุณุคูู ููุท
 * ูุฌุจ ุงุณุชุฎุฏุงูู ุจุนุฏ ูุณูุท protect
 */
const admin = (req, res, next) => {
  if (req.user && req.user.role === 'admin') {
    console.log(`๐ ุตูุงุญูุงุช ุงููุณุคูู ูุคูุฏุฉ: ${req.user.email}`);
    next();
  } else {
    console.log(`๐ซ ูุญุงููุฉ ูุตูู ุจุฏูู ุตูุงุญูุงุช ูุณุคูู: ${req.user?.email || 'ูุณุชุฎุฏู ุบูุฑ ูุณุฌู'}`);
    res.status(403);
    throw new Error('ุบูุฑ ูุตุฑุญ ุจูุ ูุทููุจ ุตูุงุญูุงุช ูุณุคูู');
  }
};

/**
 * ูุณูุท ูุญูุงูุฉ ุงููุณุงุฑุงุช ุงูุชู ุชุชุทูุจ ุตูุงุญูุงุช ุงูุฎูุงุท ุฃู ุงููุณุคูู
 * ูุฌุจ ุงุณุชุฎุฏุงูู ุจุนุฏ ูุณูุท protect
 */
const tailor = (req, res, next) => {
  if (req.user && (req.user.role === 'tailor' || req.user.role === 'admin')) {
    console.log(`โ๏ธ ุตูุงุญูุงุช ุงูุฎูุงุท ูุคูุฏุฉ: ${req.user.email} (${req.user.role})`);
    next();
  } else {
    console.log(`๐ซ ูุญุงููุฉ ูุตูู ุจุฏูู ุตูุงุญูุงุช ุฎูุงุท: ${req.user?.email || 'ูุณุชุฎุฏู ุบูุฑ ูุณุฌู'}`);
    res.status(403);
    throw new Error('ุบูุฑ ูุตุฑุญ ุจูุ ูุทููุจ ุตูุงุญูุงุช ุฎูุงุท');
  }
};

/**
 * ูุณูุท ููุชุญูู ูู ููููุฉ ุงูููุฑุฏ
 * ูุณุชุฎุฏู ููุชุฃูุฏ ูู ุฃู ุงููุณุชุฎุฏู ูููู ุงูููุฑุฏ ุฃู ูุฏูู ุตูุงุญูุงุช ุงููุณุคูู
 * @param {string} modelField - ุงุณู ุญูู ุงููุณุชุฎุฏู ูู ูููุฐุฌ ุงูููุฑุฏ (ุงูุชุฑุงุถู: 'userId')
 */
const checkOwnership = (modelField = 'userId') => {
  return asyncHandler(async (req, res, next) => {
    // ูุฌุจ ุฃู ูููู ุงููุณุชุฎุฏู ูุตุงุฏูุงู ุจุงููุนู (ุงุณุชุฎุฏู protect ุฃููุงู)
    if (!req.user) {
      res.status(401);
      throw new Error('ุงููุตุงุฏูุฉ ูุทููุจุฉ');
    }

    // ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูุณุคููุงูุ ุงูุณูุงุญ ุจุงููุตูู
    if (req.user.role === 'admin') {
      next();
      return;
    }

    // ุงูุญุตูู ุนูู ูุนุฑู ุงูููุฑุฏ ูู ูุนููุงุช ุงูุทูุจ
    const resourceId = req.params.id;
    if (!resourceId) {
      res.status(400);
      throw new Error('ูุนุฑู ุงูููุฑุฏ ูุทููุจ');
    }

    // ุงูุญุตูู ุนูู ูููุฐุฌ ุงูููุฑุฏ ูู req.resource (ูุฌุจ ุชุนูููู ูู ูุนุงูุฌ ุงููุณุงุฑ ูุจู ุงุณุชุฏุนุงุก ูุฐุง ุงููุณูุท)
    const resource = req.resource;

    // ุงูุชุญูู ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูู ูุงูู ุงูููุฑุฏ
    const ownerId = resource[modelField].toString();
    const userId = req.user._id.toString();

    if (ownerId !== userId) {
      console.log(`๐ซ ูุญุงููุฉ ูุตูู ุบูุฑ ูุตุฑุญ ุจู: ุงููุณุชุฎุฏู ${userId} ูุญุงูู ุงููุตูู ุฅูู ููุฑุฏ ููููู ${ownerId}`);
      res.status(403);
      throw new Error('ุบูุฑ ูุตุฑุญ ุจูุ ูุง ุชููู ุตูุงุญูุฉ ุงููุตูู ุฅูู ูุฐุง ุงูููุฑุฏ');
    }

    next();
  });
};

module.exports = { protect, admin, tailor, checkOwnership };
